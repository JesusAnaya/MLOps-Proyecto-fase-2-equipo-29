[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "mlops_project"
version = "0.0.1"
description = "Proyecto de MLOps para la materia TC5044.10 - Equipo 29"
authors = [
  { name = "Equipo 29" },
]
license = { file = "LICENSE" }
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: BSD License"
]
dependencies = [
    "awscli>=1.32.0",
    "dvc[s3]>=3.0.0",
    "ipython>=8.18.0",
    "jupyterlab>=4.0.0",
    "matplotlib>=3.8.0",
    "mkdocs>=1.5.0",
    "notebook>=7.0.0",
    "numpy>=1.26.0",
    "pandas>=2.1.0",
    "pip>=23.3.0",
    "python-dotenv>=1.0.0",
    "ruff>=0.1.6",
    "scikit-learn>=1.3.2",
    "seaborn>=0.13.0",
    "joblib>=1.3.2",
    "xgboost>=2.0.0",
    "imbalanced-learn>=0.11.0",
    "deep-translator>=1.11.0",
    "pytest-mock>=3.15.1",
]
requires-python = "~=3.12.0"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.11.0",
]

# === Scripts de ejecución para UV ===
[project.scripts]
# Preparación de datos
mlops-prepare-data = "mlops_project.dataset:main"
mlops-prepare-features = "mlops_project.features:main"

# Entrenamiento y predicción
mlops-train = "mlops_project.modeling.train:main"
mlops-predict = "mlops_project.modeling.predict:main"

# Configuración de grupos de dependencias
[dependency-groups]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
]

# === Configuración de Ruff ===
[tool.ruff]
line-length = 99
src = ["mlops_project"]
include = ["pyproject.toml", "mlops_project/**/*.py"]
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "*.pyc",
    ".pytest_cache",
    "*.egg-info",
    "dist",
    "build",
]

[tool.ruff.lint]
extend-select = ["I"]  # Añade ordenamiento de imports
ignore = ["E501"]  # Ignora líneas muy largas (ya está configurado line-length)

[tool.ruff.lint.isort]
known-first-party = ["mlops_project"]
force-sort-within-sections = true

# === Configuración de Pytest ===
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
    "--cov=mlops_project",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# === Configuración de Coverage ===
[tool.coverage.run]
source = ["mlops_project"]
omit = [
    "*/tests/*",
    "*/__init__.py",
    "*/setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
